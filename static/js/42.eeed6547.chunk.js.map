{"version":3,"file":"static/js/42.eeed6547.chunk.js","mappings":"4PACA,EAA4B,oCAA5B,EAA4E,oC,SCyF5E,EA/EyB,WAAO,IAAD,EAC7B,GAA0BA,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAWC,EAAAA,EAAAA,MAEXC,GAAO,WADIC,EAAAA,EAAAA,MACKC,aAAT,eAAgBF,OAAQ,KAErCG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,6GAEFC,EAAAA,EAAAA,aAAiBT,GAFf,OAEhBJ,EAFgB,OAGtBC,EAASD,GAHa,gDAKtBG,EAAS,gDALa,yDAAH,qDAQvBS,GACD,GAAE,CAACR,IAEJ,IACEU,EAMEd,EANFc,YACAC,EAKEf,EALFe,eACAC,EAIEhB,EAJFgB,aACAC,EAGEjB,EAHFiB,aACAC,EAEElB,EAFFkB,SACAC,EACEnB,EADFmB,OAGIC,GAA8B,GAAfJ,GAAmBK,QAAQ,GAChD,OACE,gCACGnB,IAAS,yBAAMA,KAChB,mBAAQoB,KAAK,SAASC,QAAS,kBAAMjB,EAASE,EAAf,EAA/B,sBAIA,iBAAKgB,UAAWC,EAAhB,WACE,0BACE,gBACEC,IAAKZ,EAAW,UAZT,oCAYS,OAAiBA,GAAgB,QACjDa,IAAKZ,EACLa,MAAO,SAGX,iBAAKJ,UAAWC,EAAhB,WACE,0BACGV,GACD,gCAAQE,GAAgBA,EAAaY,MAAM,EAAG,GAA9C,WAEF,wCACA,yBAAIT,EAAJ,QACA,sCACA,uBAAIF,KACJ,oCACA,8BAAIC,QAAJ,IAAIA,OAAJ,EAAIA,EAAQW,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,eAG7C,mBACA,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMC,GAAG,OAAOvB,MAAO,CAAEF,KAAAA,GAAzB,qBAIF,yBACE,SAAC,KAAD,CAAMyB,GAAG,UAAUvB,MAAO,CAAEF,KAAAA,GAA5B,2BAKJ,mBACA,SAAC,KAAD,MAGL,C,8DCtFK0B,EAAM,+BAENC,EAAoB,mCAAG,oGACJC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iEADI,cACrBG,EADqB,yBAKpBA,EAASC,KAAKC,SALM,2CAAH,qDAQpBC,EAAY,mCAAG,WAAMC,GAAN,uFACIL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACLO,EADK,8CADJ,cACbJ,EADa,yBAKZA,EAASC,MALG,2CAAH,sDAQZI,EAAc,mCAAG,WAAMC,GAAN,uFACEP,EAAAA,EAAAA,IAAA,UAClBF,EADkB,wEACiDS,IAFnD,cACfN,EADe,yBAIdA,EAASC,KAAKC,SAJA,2CAAH,sDAOdK,EAAe,mCAAG,WAAMH,GAAN,uFACCL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACLO,EADK,sDADD,cAChBJ,EADgB,yBAIfA,EAASC,KAAKO,MAJC,2CAAH,sDAOfC,EAAe,mCAAG,WAAML,GAAN,uFACCL,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACLO,EADK,sDADD,cAChBJ,EADgB,yBAIfA,EAASC,KAAKC,SAJC,2CAAH,sDAOf1B,EAAM,CACVsB,qBAAAA,EACAK,aAAAA,EACAE,eAAAA,EACAE,gBAAAA,EACAE,gBAAAA,GAGF,K","sources":["webpack://react-homework-template/./src/pages/MovieDetailsPage/MovieDetailsPage.module.css?9108","pages/MovieDetailsPage/MovieDetailsPage.jsx","shared/api/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetailsPage_container__fntPy\",\"movieInfo\":\"MovieDetailsPage_movieInfo__RVh2B\"};","import { useState, useEffect } from 'react';\nimport {\n  Link,\n  useParams,\n  useNavigate,\n  Outlet,\n  useLocation,\n} from 'react-router-dom';\nimport api from 'shared/api/movies-api';\nimport css from './MovieDetailsPage.module.css';\n\nconst MovieDetailsPage = () => {\n  const [movie, setMovie] = useState({});\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = location.state?.from || '/';\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const movie = await api.getMovieById(movieId);\n        setMovie(movie);\n      } catch (error) {\n        setError('An error occurred while fetching movie data.');\n      }\n    };\n    fetchMovieDetails();\n  }, [movieId]);\n\n  const {\n    poster_path,\n    original_title,\n    vote_average,\n    release_date,\n    overview,\n    genres,\n  } = movie;\n  const imageURL = 'https://image.tmdb.org/t/p/w500/';\n  const voteAverage = (vote_average * 10).toFixed(2);\n  return (\n    <>\n      {error && <div>{error}</div>}\n      <button type=\"button\" onClick={() => navigate(from)}>\n        Go back\n      </button>\n\n      <div className={css.container}>\n        <div>\n          <img\n            src={poster_path ? `${imageURL}${poster_path}` : 'error'}\n            alt={original_title}\n            width={250}\n          />\n        </div>\n        <div className={css.movieInfo}>\n          <h2>\n            {original_title}\n            <span>({release_date && release_date.slice(0, 4)})</span>\n          </h2>\n          <h3>User Score</h3>\n          <p>{voteAverage}%</p>\n          <h3>Overwiew</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{genres?.map(({ name }) => name).join(', ')}</p>\n        </div>\n      </div>\n      <hr />\n      <h3>Additional information</h3>\n      <ul>\n        <li>\n          <Link to=\"cast\" state={{ from }}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={{ from }}>\n            Reviews\n          </Link>\n        </li>\n      </ul>\n      <hr />\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3';\n\nconst searchTrendingMovies = async () => {\n  const response = await axios.get(\n    `${URL}/trending/movie/day?api_key=a4c507e56effa1158f9e8b1f806bf6ad`\n  );\n\n  return response.data.results;\n};\n\nconst getMovieById = async id => {\n  const response = await axios.get(\n    `${URL}/movie/${id}?api_key=a4c507e56effa1158f9e8b1f806bf6ad`\n  );\n\n  return response.data;\n};\n\nconst getMovieByName = async searchQuery => {\n  const response = await axios.get(\n    `${URL}/search/movie?api_key=a4c507e56effa1158f9e8b1f806bf6ad&query=${searchQuery}`\n  );\n  return response.data.results;\n};\n\nconst getMovieCredits = async id => {\n  const response = await axios.get(\n    `${URL}/movie/${id}/credits?api_key=a4c507e56effa1158f9e8b1f806bf6ad`\n  );\n  return response.data.cast;\n};\n\nconst getMovieReviews = async id => {\n  const response = await axios.get(\n    `${URL}/movie/${id}/reviews?api_key=a4c507e56effa1158f9e8b1f806bf6ad`\n  );\n  return response.data.results;\n};\n\nconst api = {\n  searchTrendingMovies,\n  getMovieById,\n  getMovieByName,\n  getMovieCredits,\n  getMovieReviews,\n};\n\nexport default api;\n"],"names":["useState","movie","setMovie","error","setError","movieId","useParams","navigate","useNavigate","from","useLocation","state","useEffect","fetchMovieDetails","api","poster_path","original_title","vote_average","release_date","overview","genres","voteAverage","toFixed","type","onClick","className","css","src","alt","width","slice","map","name","join","to","URL","searchTrendingMovies","axios","response","data","results","getMovieById","id","getMovieByName","searchQuery","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}