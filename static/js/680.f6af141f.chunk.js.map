{"version":3,"file":"static/js/680.f6af141f.chunk.js","mappings":"yNA4BA,UAxBa,WACX,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,6GAEGC,EAAAA,EAAAA,uBAFH,OAEZN,EAFY,OAGlBC,EAAUD,GAHQ,gDAKlBG,EAAS,KAAMI,SALG,yDAAH,qDAQnBF,GACD,GAAE,KAGD,iCACE,4CACEH,IAAS,SAAC,IAAD,CAAYF,OAAQA,MAGpC,C,oDCDD,IAtBmB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACdQ,GAAWC,EAAAA,EAAAA,MAEXC,EAAWV,EAAOW,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OAC1B,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMR,GAA1C,SACGI,KAFIC,EADiB,IAO5B,OAAO,wBAAKH,GACb,C,8DCZKO,EAAM,+BAENC,EAAoB,mCAAG,oGACJC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iEADI,cACrBG,EADqB,yBAKpBA,EAASC,KAAKC,SALM,2CAAH,qDAQpBC,EAAY,mCAAG,WAAMV,GAAN,uFACIM,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACLJ,EADK,8CADJ,cACbO,EADa,yBAKZA,EAASC,MALG,2CAAH,sDAQZG,EAAc,mCAAG,WAAMC,GAAN,uFACEN,EAAAA,EAAAA,IAAA,UAClBF,EADkB,wEACiDQ,IAFnD,cACfL,EADe,yBAIdA,EAASC,KAAKC,SAJA,2CAAH,sDAOdI,EAAe,mCAAG,WAAMb,GAAN,uFACCM,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACLJ,EADK,sDADD,cAChBO,EADgB,yBAIfA,EAASC,KAAKM,MAJC,2CAAH,sDAOfC,EAAe,mCAAG,WAAMf,GAAN,uFACCM,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACLJ,EADK,sDADD,cAChBO,EADgB,yBAIfA,EAASC,KAAKC,SAJC,2CAAH,sDAOfhB,EAAM,CACVY,qBAAAA,EACAK,aAAAA,EACAC,eAAAA,EACAE,gBAAAA,EACAE,gBAAAA,GAGF,K","sources":["pages/HomePage/HomePage.jsx","shared/MoviesList/MoviesList.jsx","shared/api/movies-api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport api from '../../shared/api/movies-api';\nimport MoviesList from '../../shared/MoviesList/MoviesList';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchTrending = async () => {\n      try {\n        const movies = await api.searchTrendingMovies();\n        setMovies(movies);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    fetchTrending();\n  }, []);\n\n  return (\n    <>\n      <h1>Trending today</h1>\n      {!error && <MoviesList movies={movies} />}\n    </>\n  );\n};\n\nexport default Home;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  const elements = movies.map(({ title, id }) => (\n    <li key={id}>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        {title}\n      </Link>\n    </li>\n  ));\n  return <ul>{elements}</ul>;\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default MoviesList;\n","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3';\n\nconst searchTrendingMovies = async () => {\n  const response = await axios.get(\n    `${URL}/trending/movie/day?api_key=a4c507e56effa1158f9e8b1f806bf6ad`\n  );\n\n  return response.data.results;\n};\n\nconst getMovieById = async id => {\n  const response = await axios.get(\n    `${URL}/movie/${id}?api_key=a4c507e56effa1158f9e8b1f806bf6ad`\n  );\n\n  return response.data;\n};\n\nconst getMovieByName = async searchQuery => {\n  const response = await axios.get(\n    `${URL}/search/movie?api_key=a4c507e56effa1158f9e8b1f806bf6ad&query=${searchQuery}`\n  );\n  return response.data.results;\n};\n\nconst getMovieCredits = async id => {\n  const response = await axios.get(\n    `${URL}/movie/${id}/credits?api_key=a4c507e56effa1158f9e8b1f806bf6ad`\n  );\n  return response.data.cast;\n};\n\nconst getMovieReviews = async id => {\n  const response = await axios.get(\n    `${URL}/movie/${id}/reviews?api_key=a4c507e56effa1158f9e8b1f806bf6ad`\n  );\n  return response.data.results;\n};\n\nconst api = {\n  searchTrendingMovies,\n  getMovieById,\n  getMovieByName,\n  getMovieCredits,\n  getMovieReviews,\n};\n\nexport default api;\n"],"names":["useState","movies","setMovies","error","setError","useEffect","fetchTrending","api","message","location","useLocation","elements","map","title","id","to","state","from","URL","searchTrendingMovies","axios","response","data","results","getMovieById","getMovieByName","searchQuery","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}